C51 COMPILER V9.59.0.0   SHT30                                                             10/26/2022 13:04:36 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE SHT30
OBJECT MODULE PLACED IN .\OUTPUT\sht30.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE HARDWARE\sht30.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER;.\SYSTEM;
                    -.\HARDWARE) DEBUG OBJECTEXTEND PRINT(.\sht30.lst) TABS(2) OBJECT(.\OUTPUT\sht30.obj)

line level    source

   1          #include "sht30.h"
   2          
   3          
   4           float temperatureC;
   5           float humidityRH;
   6          
   7           uint8 buffer[6];
   8          
   9           /**************************************************************************************
  10           * 描  述 : 向SHT30写寄存器命令
  11           * 入  参 : cmd: 两字节命令
  12           * 返回值 :   1---成功写入,     0---失败
  13           **************************************************************************************/
  14          bit SHT3X_WriteCMD(uint16 cmd)
  15          {
  16   1        if(!I2C_Start())   return FALSE;
  17   1        I2C_SendByte(i2cAddWrite_8bit);
  18   1        if(!I2C_WaitAck()){I2C_Stop(); return FALSE;}
  19   1        I2C_SendByte(cmd>>8);
  20   1        I2C_WaitAck();
  21   1        I2C_SendByte(cmd);
  22   1        I2C_WaitAck();
  23   1        I2C_Stop();
  24   1        return TRUE;
  25   1      }
  26          
  27           /**************************************************************************************
  28           * 描  述 : 设置测量周期
  29           * 入  参 : 无
  30           * 返回值 : 无
  31           **************************************************************************************/
  32          void SHT3X_SetPeriodicMeasurement(void)
  33          {
  34   1          SHT3X_WriteCMD(CMD_MEAS_PERI_2_H);
  35   1      }
  36          
  37           /**************************************************************************************
  38           * 描  述 : 初始化SHT3X传感器
  39           * 入  参 : 无
  40           * 返回值 : 无
  41           **************************************************************************************/
  42          void SHT3X_Init(void)
  43          {
  44   1          delay_ms(100); 
  45   1          SHT3X_SetPeriodicMeasurement();
  46   1          delay_ms(100); 
  47   1      }
  48          
  49           /**************************************************************************************
  50           * 描  述 : 从SHT30读取状态信息
  51           * 入  参 : temp: 待读出地址
  52           * 返回值 :   1---成功读取,     0---失败
  53           **************************************************************************************/
  54          //bit SHT3X_ReadState(uint8 *temp)
C51 COMPILER V9.59.0.0   SHT30                                                             10/26/2022 13:04:36 PAGE 2   

  55          //{
  56          //  if(!I2C_Start())return FALSE;
  57          //  I2C_SendByte(i2cAddWrite_8bit);
  58          //  if(!I2C_WaitAck())    {I2C_Stop(); return FALSE;}
  59          //  I2C_SendByte(0xf3);
  60          //  I2C_WaitAck();
  61          //  I2C_SendByte(0X2d);
  62          //  I2C_WaitAck();
  63          //  I2C_Stop(); 
  64          //  delay_ms(100);
  65          //  if(!I2C_Start())return FALSE;
  66          //  I2C_SendByte(i2cAddRead_8bit);
  67          //  I2C_WaitAck();
  68          //  temp[0] = I2C_ReceiveByte();
  69          //  I2C_Ack();
  70          //  temp[1] = I2C_ReceiveByte();
  71          //  I2C_Ack();
  72          //  temp[2] = I2C_ReceiveByte();
  73          //  I2C_NoAck(); 
  74          //  I2C_Stop(); 
  75          //  return TRUE;
  76          //}
  77          
  78           /**************************************************************************************
  79           * 描  述 : 从SHT30读取测量结果
  80           * 入  参 : cmd: 待配置命令    p：待读出地址
  81           * 返回值 :   1---成功读取,     0---失败
  82           **************************************************************************************/
  83          bit SHX3X_ReadResults(uint16 cmd,  uint8 *p)
  84          {
  85   1        if(!I2C_Start())return FALSE;
  86   1        I2C_SendByte(0x88);
  87   1        if(!I2C_WaitAck())    {I2C_Stop(); return FALSE;}
  88   1        I2C_SendByte(cmd>>8);
  89   1        I2C_WaitAck();
  90   1        I2C_SendByte(cmd);
  91   1        I2C_WaitAck();
  92   1        I2C_Stop();
  93   1        
  94   1        if(!I2C_Start())return FALSE;
  95   1        I2C_SendByte(0x89);
  96   1        if(!I2C_WaitAck())    {I2C_Stop(); return FALSE;}
  97   1      
  98   1        p[0] = I2C_ReceiveByte();
  99   1        I2C_Ack();
 100   1        p[1] = I2C_ReceiveByte();
 101   1        I2C_Ack();
 102   1        p[2] = I2C_ReceiveByte();
 103   1        I2C_Ack();
 104   1        p[3] = I2C_ReceiveByte();
 105   1        I2C_Ack();
 106   1        p[4] = I2C_ReceiveByte();
 107   1        I2C_Ack();
 108   1        p[5] = I2C_ReceiveByte();
 109   1        I2C_NoAck();
 110   1        I2C_Stop();
 111   1        return TRUE;
 112   1      }
 113          
 114           /**************************************************************************************
 115           * 描  述 : SHT30检测函数  crc校验
 116           * 入  参 : dat[]: 等待检验的数据   startByte: 开始数组的标号
C51 COMPILER V9.59.0.0   SHT30                                                             10/26/2022 13:04:36 PAGE 3   

 117                      number: 检验个数         checksum: 接收到的CRC数据
 118           * 返回值 :   1---成功检测,     0---失败
 119           **************************************************************************************/
 120          //bit SHT3x_CheckCrc(uint8 dat[],uint8 startBytes,uint8 number, uint8 checksum)
 121          //{
 122          //  uint8 temp=0;
 123          //  uint8 crc = 0;  
 124          //  uint8 byteCtr;
 125          //  //calculates 8-Bit checksum with given polynomial
 126          //  for (byteCtr = startBytes; byteCtr < startBytes+number; ++byteCtr)
 127          //  { crc ^= (dat[byteCtr]);
 128          //    for (temp = 8; temp > 0; --temp)
 129          //    { if (crc & 0x80) crc = (crc << 1) ^ POLYNOMIAL;
 130          //      else crc = (crc << 1);
 131          //    }
 132          //  }
 133          //  if (crc ==checksum) 
 134          //  return TRUE;
 135          //  else
 136          //  return FALSE;
 137          //}
 138          
 139           /**************************************************************************************
 140           * 描  述 : 计算温度函数
 141           * 入  参 : dat：读取的温度信息
 142           * 返回值 : 计算出的温度值
 143           **************************************************************************************/
 144          float SHT3X_CalcTemperature(uint16 dat)
 145          {
 146   1          // calculate temperature 
 147   1          float temp;
 148   1          temp = (175 * (float)dat / 65535 - 45) ; // T = -45 + 175 * rawValue / (2^16-1)
 149   1          return temp;
 150   1      }
 151          
 152           /**************************************************************************************
 153           * 描  述 : 计算湿度函数
 154           * 入  参 : dat：读取的湿度信息
 155           * 返回值 : 计算出的湿度值
 156           **************************************************************************************/
 157          float SHT3X_CalcRH(uint16 dat)
 158          {
 159   1          // calculate relative humidity [%RH]
 160   1        float temp;
 161   1        temp = (100 * (float)dat / 65535) ;  // RH = rawValue / (2^16-1) * 10
 162   1        return temp;
 163   1      }
 164          
 165           /**************************************************************************************
 166           * 描  述 : SHT30函数 获取温度、湿度
 167           * 入  参 : 无
 168           * 返回值 : 无
 169           **************************************************************************************/
 170          int SHT3X_Get(void)
 171          {
 172   1         float p[6];
 173   1         float cTemp,rhTemp;
 174   1          
 175   1          SHT3X_SetPeriodicMeasurement();   //初始化sh3X,设置命令；
 176   1        
 177   1         //周期模式读出温湿度原始值，将原始值存放数组p
 178   1         if(SHX3X_ReadResults(CMD_FETCH_DATA, buffer))
C51 COMPILER V9.59.0.0   SHT30                                                             10/26/2022 13:04:36 PAGE 4   

 179   1         {
 180   2           p[0] = buffer[0];
 181   2           p[1] = buffer[1];
 182   2           p[2] = buffer[2];
 183   2           p[3] = buffer[3];
 184   2           p[4] = buffer[4];
 185   2           p[5] = buffer[5];
 186   2         }
 187   1         
 188   1         //计算温度原始信息，并带入算法计算出实际温度值
 189   1         cTemp = (p[0] * 256.0) + p[1];
 190   1         temperatureC =SHT3X_CalcTemperature(cTemp);
 191   1         
 192   1         if(temperatureC>120) return 0;
 193   1         if(temperatureC<-44) return 0;
 194   1         
 195   1         
 196   1         //计算湿度原始信息，并带入算法计算出实际湿度值
 197   1         rhTemp = (p[3] * 256.0) + p[4];
 198   1         humidityRH = SHT3X_CalcRH(rhTemp);
 199   1        
 200   1         //串口1上传温湿度信息
 201   1         
 202   1      //  P_SW1&=0X3F;     //串口1切换回 P30 P31
 203   1      //  TXEN485 = 1;      //控制485发送功能，需要发送时设定
 204   1         
 205   1         fTempM[8] = temperatureC*10;         //值放大10倍的整数，实际精确到1位小数
 206   1         fTempM[9] = humidityRH*10;
 207   1         
 208   1         if(fTempM[8] <= -440)      //未接传感器SHT30，温度为-450
 209   1         {
 210   2            fTempM[8] = 0;          
 211   2            fTempM[9] = 0;
 212   2         }
 213   1         
 214   1      //   printf("温度：%f\r\n",fTempM[0]);
 215   1      //   printf("湿度：%f\r\n",fTempM[1]);
 216   1      //  
 217   1      //  TXEN485 = 0;      //控制485接收功能
 218   1      //  P_SW1|=0X40;      //串口1切换 P36,P37   
 219   1      //  P_SW1&=0X7F;      //串口1切换 P36,P37 
 220   1      
 221   1          return 1;
 222   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    764    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14      31
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
